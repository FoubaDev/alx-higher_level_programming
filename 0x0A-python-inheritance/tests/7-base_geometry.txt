# LAGRE GABBA BERTRAND
This library has a function ""integer_validator()""

""integer_validator" validates the integer variable value.

Importing the function:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Passing a non-integer argument.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    	...
    TypeError: name must be an integer

Passing a 0 value.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	...
    ValueError: name must be greater than 0

Passing a positive value.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)

Passing one argument to integer_validator.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Passing more than two arguments to integer_validator.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 12, 13)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


Passing a negative value.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	...
    ValueError: name must be greater than 0


Passing no arguments to integer_validator.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Passing a boolean value.
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", False)
    Traceback (most recent call last):
    	...
    ValueError: name must be greater than 0
   
Area is not implemented.
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	...
    Exception: area() is not implemented

